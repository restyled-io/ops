Parameters:
  Environment:
    Type: String
  QueueScaleUpThreshold:
    Type: Number
  QueueAlertThreshold:
    Type: Number

  Version:
    Type: Number
    Default: 0

Outputs:
  Version:
    Description: "Template version"
    Value: !Ref Version

Resources:
  CheckRedisUrlExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: |
        {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "edgelambda.amazonaws.com",
                "lambda.amazonaws.com"
              ]
            },
            "Action": "sts:AssumeRole"
          }]
        }

      ManagedPolicyArns:
        - !Sub "arn:aws:iam::${AWS::AccountId}:policy/restyled-${Environment}-cloudwatch-metrics"
        - !Sub "arn:aws:iam::${AWS::AccountId}:policy/restyled-${Environment}-get-parameter"
        - !Sub "arn:aws:iam::${AWS::AccountId}:policy/restyled-${Environment}-store-cloudwatch-logs"
        - !Sub "arn:aws:iam::${AWS::AccountId}:policy/restyled-${Environment}-redis-url"

  CheckRedisUrl:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "restyled-${Environment}-check-redis-url"
      Description: |
        Check (and fix) redis-url SSM Parameter

      Runtime: nodejs10.x
      Code:
        S3Bucket: infra.restyled.io
        S3Key: check-redis-url.zip
      Handler: index.handler
      Timeout: 30
      Environment:
        Variables:
          ENV: !Ref Environment
      Role: !GetAtt CheckRedisUrlExecutionRole.Arn

  CheckRedisUrlRule:
    Type: AWS::Events::Rule
    Properties:
      Description: CheckRedisUrl every two minutes
      ScheduleExpression: rate(2 minutes)
      State: "ENABLED"
      Targets:
        - Id: !Sub "restyled-${Environment}-check-redis-url"
          Arn: !GetAtt CheckRedisUrl.Arn

  CheckRedisUrlPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref CheckRedisUrl
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CheckRedisUrlRule.Arn

  AlarmsTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub "RestyledAlarmsTopic-${Environment}"
      Subscription:
        - Protocol: email
          Endpoint: alarms@restyled.io

  QueueEmptyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - Fn::ImportValue: !Sub "${Environment}-machines-ScaleDownPolicy"
        - Fn::ImportValue: !Sub "${Environment}-webhooks-ScaleDownPolicy"
      AlarmDescription: !Sub "Restyled ${Environment} Queue is empty"
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: Environment
          Value: prod
      EvaluationPeriods: 1
      MetricName: QueueDepth
      Namespace: Restyled
      Period: 60
      Statistic: Maximum
      Threshold: 0
      Unit: Count

  QueueScaleUpAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - Fn::ImportValue: !Sub "${Environment}-machines-ScaleUpPolicy"
        - Fn::ImportValue: !Sub "${Environment}-webhooks-ScaleUpPolicy"
      AlarmDescription: !Sub "Restyled ${Environment} Queue is at ScaleUp threshold"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: Environment
          Value: prod
      EvaluationPeriods: 1
      MetricName: QueueDepth
      Namespace: Restyled
      Period: 60
      Statistic: Minimum
      Threshold: !Ref QueueScaleUpThreshold
      Unit: Count

  QueueAlertAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref AlarmsTopic
      OKActions:
        - !Ref AlarmsTopic
      AlarmDescription: !Sub "Restyled ${Environment} Queue is at Alert threshold"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: Environment
          Value: prod
      EvaluationPeriods: 2
      MetricName: QueueDepth
      Namespace: Restyled
      Period: 120
      Statistic: Minimum
      Threshold: !Ref QueueAlertThreshold
      TreatMissingData: breaching
      Unit: Count

  UnknownFailuresAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref AlarmsTopic
      OKActions:
        - !Ref AlarmsTopic
      AlarmDescription: !Sub "Restyled ${Environment} Unknown Failures"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: Environment
          Value: prod
      EvaluationPeriods: 1
      MetricName: JobsFailedUnknown
      Namespace: Restyled
      Period: 60
      Statistic: Minimum
      Threshold: 5
      TreatMissingData: breaching
      Unit: Count
