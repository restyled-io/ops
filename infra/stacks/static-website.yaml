Parameters:
  Environment:
    Type: String
    Description: |
      Environment name, e.g. "prod". A Stack using the same Environment is
      expected to exist and Export values we need.

  WildcardCertId:
    Type: String
    Default: 156fe9a9-b62e-48c5-820d-6e48231b9b7b

  Alias:
    Type: String
    Description: Domain alias for this static site

Outputs:
  BucketName:
    Description: S3 Bucket Name
    Value: !Ref Bucket

  DistributionId:
    Description: CloudFront Distribution Id
    Value: !Ref Distribution

  Domain:
    Description: Cloudfront Domain
    Value: !GetAtt Distribution.DomainName

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
      CorsConfiguration:
        CorsRules:
          - AllowedMethods: ["GET", "HEAD"]
            AllowedOrigins: ["*"]

  ManageBucketPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: !Sub "Full access to ${Bucket}"
      PolicyDocument: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action": "s3:*",
            "Resource": [
              "arn:aws:s3:::${Bucket}",
              "arn:aws:s3:::${Bucket}/*"
            ]
          }]
        }
      Groups:
        - RestyledCI

  CreateInvalidationsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Create CloudFront Invalidations
      PolicyDocument: |
        {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action": [
              "cloudfront:CreateInvalidation"
            ],
            "Resource": "*"
          }]
        }
      Groups:
        - RestyledCI

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref Alias
        CustomErrorResponses:
          - ErrorCode: 403 # not found
            ResponseCode: 404
            ResponsePagePath: /404.html
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        Origins:
          - Id: s3origin
            DomainName: !Sub "${Bucket}.s3-website-${AWS::Region}.amazonaws.com"
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        PriceClass: PriceClass_All
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: false
          TargetOriginId: s3origin
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Sub "arn:aws:acm:${AWS::Region}:${AWS::AccountId}:certificate/${WildcardCertId}"
          MinimumProtocolVersion: TLSv1.2_2018
          SslSupportMethod: sni-only
