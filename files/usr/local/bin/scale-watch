#!/usr/bin/env bash
set -eu

get_heroku_redis_url() {
  heroku config --app restyled-io 2>&1 |
    sed '/^REDIS_URL: *\(.*\)$/!d; s//\1/'
}

webhooks_queue_depth() {
  echo "llen restyled:hooks:webhooks" |
    heroku redis:cli --confirm restyled-io --app restyled-io 2>&1 |
    grep -v 'Warning\|Connecting\|Disconnected' |
    grep -v '^ *$'
}

up_threshold=50
down_threshold=0
scale=down

while true; do
  this_redis_url=$(get_heroku_redis_url)
  prev_redis_url=${prev_redis_url:-$this_redis_url}

  if [[ "$this_redis_url" != "$prev_redis_url" ]]; then
    echo "=> REDIS_URL=$this_redis_url..."
    ecs-deploy-restyled --env restyled REDIS_URL "$this_redis_url"
    notify "restyled[ops]" "Updated REDIS_URL"
    prev_redis_url=$this_redis_url
  fi

  depth=$(webhooks_queue_depth)

  case "$scale" in
    down)
      if ((depth >= up_threshold)); then
        echo "Scaling up ($depth >= $up_threshold)"
        if scale up; then
          notify "restyled[ops]" "Scaled up ($depth >= $up_threshold)"
          scale=up
        else
          notify "restyled[ops]" "Scaling failed, will retry"
        fi
      fi
      ;;
    up)
      if ((depth <= down_threshold)); then
        echo "Scaling down ($depth <= $down_threshold)"
        if scale down; then
          notify "restyled[ops]" "Scaled down ($depth <= $down_threshold)"
          scale=down
        else
          notify "restyled[ops]" "Scaling failed, will retry"
        fi
      fi
      ;;
  esac

  sleep 30
done
